«IMPORT ecore»

«EXTENSION de::mdsdacp::template::extensions::DefaultComments»
«EXTENSION de::mdsdacp::template::extensions::PackageName»

«DEFINE root FOR EPackage»
	«EXPAND models FOREACH eClassifiers» 
«ENDDEFINE»

«DEFINE models FOR EClassifier»
	«FILE getPackagePath(ePackage.nsURI)+"/model/"+name.toFirstUpper()+".java"-»
		package «getPackageName(ePackage.nsURI)».model;
	
		/**
		 * Generated model class for usage in your application, defined by classifiers in ecore diagram
		 * 		
		 * «modifyWarningComment()»	 
		 */
		public class «name.toFirstUpper()»{
				private Long id;
			«FOREACH eContents.typeSelect(EAttribute) AS attr-»
				private «attr.eType.instanceClassName» «attr.name.toLowerCase()»;				
			«ENDFOREACH»	
				/**
	 			 * Set id
	 			 *
	 			 * @param id from type java.lang.Long
	 			 */
				public void setId(Long id){
					this.id = id;
				}
				
	 			/**
				 * Get id
				 *
				 * @return id from type java.lang.Long				
				 */
				public Long getId(){
					return this.id;
				} 
			«FOREACH eContents.typeSelect(EAttribute) AS attr»
				/**
	 			 * Set «attr.name.toLowerCase()»
	 			 *
	 			 * @param «attr.name.toLowerCase()» from type «attr.eType.instanceClassName»
	 			 */
				public void set«attr.name.toFirstUpper()»(«attr.eType.instanceClassName» «attr.name.toLowerCase()»){
					this.«attr.name.toLowerCase()» = «attr.name.toLowerCase()»;
				}
				
				/**
				 * Get «attr.name.toLowerCase()»
				 *
				 * @return «attr.name.toLowerCase()» from type «attr.eType.instanceClassName»				
				 */
				public «attr.eType.instanceClassName» get«attr.name.toFirstUpper()»(){
					return this.«attr.name.toLowerCase()»;
				}				
			«ENDFOREACH»			
		}
	«ENDFILE»
«ENDDEFINE»
