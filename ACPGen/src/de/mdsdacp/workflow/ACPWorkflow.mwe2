module de.mdsdacp.workflow.ACPWorkflow

var fileEncoding = "UTF-8"
var targetDir = "src-gen"
var targetCodeSnippet = targetDir
var ecoreUri = "platform:/resource/ACPGen/src/de/example/MyCPTestApp.ecore"


Workflow {
	bean = org.eclipse.emf.mwe.utils.StandaloneSetup {
		platformUri = ".."
	}
		
	component=org.eclipse.emf.mwe.utils.Reader{
		uri = ecoreUri	
		modelSlot = "model"	
	}
	
	component = org.eclipse.emf.mwe.utils.DirectoryCleaner{
		directory = targetDir
		exclude = "gen.properties"
		exclude = "Database.java"
	}
	
	component = org.eclipse.xpand2.Generator {
		expand = "de::mdsdacp::template::DatabaseTemplate::root FOR model"
		metaModel = org.eclipse.xtend.typesystem.emf.EmfMetaModel {
			metaModelPackage = "org.eclipse.emf.ecore.EcorePackage"
		} 
		outlet={
			postprocessor = org.eclipse.xpand2.output.JavaBeautifier {}
			path= targetDir
		}
		fileEncoding = fileEncoding
		prSrcPaths = targetDir
     	prDefaultExcludes = true
	}
	
	component = org.eclipse.xpand2.Generator {
		expand = "de::mdsdacp::template::ContentProviderTemplate::root FOR model"
		metaModel = org.eclipse.xtend.typesystem.emf.EmfMetaModel {
			metaModelPackage = "org.eclipse.emf.ecore.EcorePackage"
		} 
		outlet={
			postprocessor = org.eclipse.xpand2.output.JavaBeautifier {}
			path= targetDir
		}
		fileEncoding = fileEncoding
	}
	
	component = org.eclipse.xpand2.Generator {
		expand = "de::mdsdacp::template::ModelTemplate::root FOR model"
		metaModel = org.eclipse.xtend.typesystem.emf.EmfMetaModel {
			metaModelPackage = "org.eclipse.emf.ecore.EcorePackage"
		} 
		outlet={
			postprocessor = org.eclipse.xpand2.output.JavaBeautifier {}
			path= targetDir
		}
		fileEncoding = fileEncoding
	}
	
	component = org.eclipse.xpand2.Generator {
		expand = "de::mdsdacp::template::ManifestTemplate::root FOR model"
		metaModel = org.eclipse.xtend.typesystem.emf.EmfMetaModel {
			metaModelPackage = "org.eclipse.emf.ecore.EcorePackage"
		} 
		outlet={
			postprocessor = org.eclipse.xpand2.output.XmlBeautifier {}
			path= targetCodeSnippet
		}
		fileEncoding = fileEncoding
	}
}